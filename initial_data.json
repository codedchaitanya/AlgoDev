[{"model": "dashboard.topic", "pk": 1, "fields": {"name": "Array"}}, {"model": "dashboard.topic", "pk": 2, "fields": {"name": "Strings"}}, {"model": "dashboard.topic", "pk": 3, "fields": {"name": "Linked list"}}, {"model": "dashboard.topic", "pk": 4, "fields": {"name": "Stack & Queue"}}, {"model": "dashboard.topic", "pk": 5, "fields": {"name": "Tree"}}, {"model": "dashboard.topic", "pk": 6, "fields": {"name": "Binary search tree"}}, {"model": "dashboard.topic", "pk": 7, "fields": {"name": "Graph"}}, {"model": "dashboard.topic", "pk": 8, "fields": {"name": "DP"}}, {"model": "dashboard.question", "pk": 1, "fields": {"title": "Reverse a string", "topic": 2, "difficulty": "Med.", "is_active": true}}, {"model": "dashboard.question", "pk": 2, "fields": {"title": "valid palindrome", "topic": 2, "difficulty": "Easy", "is_active": true}}, {"model": "dashboard.question", "pk": 5, "fields": {"title": "Sort an array", "topic": 1, "difficulty": "Easy", "is_active": true}}, {"model": "dashboard.question", "pk": 6, "fields": {"title": "Palindrome Linked List", "topic": 3, "difficulty": "Hard", "is_active": true}}, {"model": "dashboard.question", "pk": 7, "fields": {"title": "Trapping Rain Water", "topic": 8, "difficulty": "Hard", "is_active": true}}, {"model": "dashboard.question", "pk": 8, "fields": {"title": "Build an Array With Stack Operations", "topic": 4, "difficulty": "Med.", "is_active": true}}, {"model": "dashboard.question", "pk": 9, "fields": {"title": "Binary Tree Inorder Traversal", "topic": 5, "difficulty": "Med.", "is_active": true}}, {"model": "dashboard.question", "pk": 10, "fields": {"title": "Undirected Graph Cycle", "topic": 7, "difficulty": "Med.", "is_active": true}}, {"model": "problem_detail.testcase", "pk": 1, "fields": {"question": 1, "topic": 2, "difficulty": "Med.", "description": "Write a function that reverses a string. The input string is given as an array of characters s.\r\n\r\nYou must do this by modifying the input array in-place with O(1) extra memory.", "input_file": "testcases/inputs/reverse_input_vis_8S0dNoo.txt", "output_file": "testcases/outputs/reverse_output_vis_z9DrF9M.txt", "hidden_input_file": "testcases/hidden_inputs/reverse_input_hid_MRZrgYR.txt", "hidden_output_file": "testcases/hidden_outputs/reverse_output_hid_XbVZI0W.txt", "is_visible": true, "constraints": "1 <= s.length <= 105\r\ns[i] is a printable ascii character.", "explanations": "Example 1: The input array [\"h\",\"e\",\"l\",\"l\",\"o\"] is reversed in-place to become [\"o\",\"l\",\"l\",\"e\",\"h\"].\r\n\r\nExample 2: The input array [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"] is reversed, swapping the first and last characters to become [\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]."}}, {"model": "problem_detail.testcase", "pk": 2, "fields": {"question": 2, "topic": 2, "difficulty": "Easy", "description": "A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.\r\nGiven a string s, return true if it is a palindrome, or false otherwise.", "input_file": "testcases/inputs/input_vis_cCJYVCK.txt", "output_file": "testcases/outputs/output_vis_CUi2Ewa.txt", "hidden_input_file": "testcases/hidden_inputs/input_hid.txt", "hidden_output_file": "testcases/hidden_outputs/output_hid.txt", "is_visible": true, "constraints": "1 <= s.length <= 2 * 105\r\ns consists only of printable ASCII characters.", "explanations": "\"amanaplanacanalpanama\" is a palindrome."}}, {"model": "problem_detail.testcase", "pk": 5, "fields": {"question": 5, "topic": 1, "difficulty": "Easy", "description": "Given an array of integers nums, sort the array in ascending order and return it.\r\n\r\nYou must solve the problem without using any built-in functions in O(nlog(n)) time complexity and with the smallest space complexity possible.", "input_file": "testcases/inputs/sort_input_vis_oeJMeMY.txt", "output_file": "testcases/outputs/sort_output_vis_X22gZlZ.txt", "hidden_input_file": "testcases/hidden_inputs/sort_input_hid.txt", "hidden_output_file": "testcases/hidden_outputs/sort_output_hid.txt", "is_visible": true, "constraints": "1 <= nums.length <= 5 * 104\r\n-5 * 104 <= nums[i] <= 5 * 104", "explanations": "Example1. After sorting the array, the positions of some numbers are not changed (for example, 2 and 3), while the positions of other numbers are changed (for example, 1 and 5).\r\nExample2. Note that the values of nums are not necessarily unique."}}, {"model": "problem_detail.testcase", "pk": 6, "fields": {"question": 6, "topic": 3, "difficulty": "Hard", "description": "Given the head of a singly linked list, return true if it is a palindrome or false otherwise.", "input_file": "testcases/inputs/LL_input_vis_6FzkxnC.txt", "output_file": "testcases/outputs/LL_output_vis.txt", "hidden_input_file": "testcases/hidden_inputs/LL_input_hid_QUg7IXQ.txt", "hidden_output_file": "testcases/hidden_outputs/LL_output_hid_F0BR78x.txt", "is_visible": false, "constraints": "The number of nodes in the list is in the range [1, 105].\r\n0 <= Node.val <= 9", "explanations": ""}}, {"model": "problem_detail.testcase", "pk": 7, "fields": {"question": 7, "topic": 8, "difficulty": "Hard", "description": "Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.", "input_file": "testcases/inputs/DP_input_vis.txt", "output_file": "testcases/outputs/DP_output_vis.txt", "hidden_input_file": "testcases/hidden_inputs/DP_input_hid.txt", "hidden_output_file": "testcases/hidden_outputs/DP_output_hid.txt", "is_visible": true, "constraints": "n == height.length\r\n1 <= n <= 2 * 104\r\n0 <= height[i] <= 105", "explanations": "The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped."}}, {"model": "problem_detail.testcase", "pk": 8, "fields": {"question": 8, "topic": 4, "difficulty": "Med.", "description": "You are given an integer array target and an integer n.\r\n\r\nYou have an empty stack with the two following operations:\r\n\r\n\"Push\": pushes an integer to the top of the stack.\r\n\"Pop\": removes the integer on the top of the stack.\r\nYou also have a stream of the integers in the range [1, n].\r\n\r\nUse the two stack operations to make the numbers in the stack (from the bottom to the top) equal to target. You should follow the following rules:\r\n\r\nIf the stream of the integers is not empty, pick the next integer from the stream and push it to the top of the stack.\r\nIf the stack is not empty, pop the integer at the top of the stack.\r\nIf, at any moment, the elements in the stack (from the bottom to the top) are equal to target, do not read new integers from the stream and do not do more operations on the stack.\r\nReturn the stack operations needed to build target following the mentioned rules. If there are multiple valid answers, return any of them.", "input_file": "testcases/inputs/stack_input_vis.txt", "output_file": "testcases/outputs/stack_output_vis_eWGgLGx.txt", "hidden_input_file": "", "hidden_output_file": "", "is_visible": true, "constraints": "1 <= target.length <= 100\r\n1 <= n <= 100\r\n1 <= target[i] <= n\r\ntarget is strictly increasing.", "explanations": "Example1. Initially the stack s is empty. The last element is the top of the stack.\r\nRead 1 from the stream and push it to the stack. s = [1].\r\nRead 2 from the stream and push it to the stack. s = [1,2].\r\nPop the integer on the top of the stack. s = [1].\r\nRead 3 from the stream and push it to the stack. s = [1,3].\r\nExample2. Initially the stack s is empty. The last element is the top of the stack.\r\nRead 1 from the stream and push it to the stack. s = [1].\r\nRead 2 from the stream and push it to the stack. s = [1,2].\r\nRead 3 from the stream and push it to the stack. s = [1,2,3]."}}, {"model": "problem_detail.testcase", "pk": 9, "fields": {"question": 9, "topic": 5, "difficulty": "Med.", "description": "Given the root of a binary tree, return the inorder traversal of its nodes' values.", "input_file": "testcases/inputs/tree_input_vis_UzY8Xnb.txt", "output_file": "testcases/outputs/tree_output_vis_s7P0dlM.txt", "hidden_input_file": "", "hidden_output_file": "", "is_visible": true, "constraints": "The number of nodes in the tree is in the range [0, 100].\r\n-100 <= Node.val <= 100", "explanations": "1-->2-->3"}}, {"model": "problem_detail.testcase", "pk": 10, "fields": {"question": 10, "topic": 7, "difficulty": "Med.", "description": "Given an undirected graph with V vertices and E edges, represented as a 2D vector edges[][], where each entry edges[i] = [u, v] denotes an edge between vertices u and v, determine whether the graph contains a cycle or not.\r\nINPUT FORMAT:-\r\nVertices\r\nNo. of edges\r\nEdges", "input_file": "testcases/inputs/graph_input_vis.txt", "output_file": "testcases/outputs/graph_output_vis.txt", "hidden_input_file": "", "hidden_output_file": "", "is_visible": true, "constraints": "1 ≤ V ≤ 105\r\n1 ≤ E = edges.size() ≤ 105", "explanations": "Example1.  1 -> 2 -> 0 -> 1 is a cycle.\r\n\r\nExample2.  No cycle in the graph."}}]